generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  username      String        @unique
  password      String
  role          String        @default("guru")
  nama          String
  email         String?
  status        Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  guru          Guru?
  logActivities LogActivity[]
}

model Siswa {
  id           Int       @id @default(autoincrement())
  nis          String    @unique
  nama         String
  kelasId      Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  jenisKelamin String?
  absensis     Absensi[]
  kelas        Kelas     @relation(fields: [kelasId], references: [id])
}

model Guru {
  id              Int           @id @default(autoincrement())
  nip             String        @unique
  nama            String
  mataPelajaranId Int
  alamat          String?
  noTelp          String?
  userId          Int           @unique
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  mataPelajaran   MataPelajaran @relation(fields: [mataPelajaranId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  jadwals         Jadwal[]
}

model Kelas {
  id          Int       @id @default(autoincrement())
  namaKelas   String
  tingkat     String
  tahunAjaran String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  absensis    Absensi[]
  jadwals     Jadwal[]
  siswas      Siswa[]
}

model MataPelajaran {
  id        Int      @id @default(autoincrement())
  kodeMapel String   @unique
  namaMapel String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gurus     Guru[]
  jadwals   Jadwal[]
}

model Jadwal {
  id              Int           @id @default(autoincrement())
  hari            String
  jamMulai        String
  jamSelesai      String
  kelasId         Int
  guruId          Int
  mataPelajaranId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  absensis        Absensi[]
  guru            Guru          @relation(fields: [guruId], references: [id])
  kelas           Kelas         @relation(fields: [kelasId], references: [id])
  mataPelajaran   MataPelajaran @relation(fields: [mataPelajaranId], references: [id])
}

model Absensi {
  id         Int      @id @default(autoincrement())
  tanggal    DateTime
  status     String
  keterangan String?
  siswaId    Int
  jadwalId   Int
  kelasId    Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  jadwal     Jadwal   @relation(fields: [jadwalId], references: [id])
  kelas      Kelas    @relation(fields: [kelasId], references: [id])
  siswa      Siswa    @relation(fields: [siswaId], references: [id])
}

model LogActivity {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String
  detail    String?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
